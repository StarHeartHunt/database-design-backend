generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  account  String
  password String
}

model Position {
  id       Int        @id @default(autoincrement())
  name     String
  Employee Employee[]
}

model Employee {
  id         Int      @id @default(autoincrement())
  name       String
  gender     Int
  birthday   DateTime
  hiredAt    DateTime
  position   Position @relation(fields: [positionId], references: [id], onDelete: Cascade)
  positionId Int
  Order      Order[]
}

model ProductType {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model Supplier {
  id          Int           @id @default(autoincrement())
  name        String
  address     String
  contact     String
  Product     Product[]
  Inventory   Inventory[]
  OrderDetail OrderDetail[]
  StockInfo   StockInfo[]
}

model Product {
  id            Int           @id @default(autoincrement())
  name          String
  price         Float
  productTypeId Int
  supplierId    Int
  ProductType   ProductType   @relation(fields: [productTypeId], references: [id], onDelete: Cascade)
  Supplier      Supplier      @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  OrderDetail   OrderDetail[]
  Inventory     Inventory[]
  StockInfo     StockInfo[]
}

model StockInfo {
  id           Int      @id @default(autoincrement())
  productId    Int
  supplierId   Int
  unitPrice    Float
  quantity     Int
  purchaseDate DateTime
  Product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  Supplier     Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}

model Inventory {
  productId        Int
  supplierId       Int
  unitPrice        Float
  quantity         Int
  firstPurchaseAt  DateTime
  latestPurchaseAt DateTime
  latestSaleAt     DateTime
  Product          Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  Supplier         Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)

  @@id([productId, supplierId])
}

model Order {
  id          Int           @id @default(autoincrement())
  employeeId  Int
  date        DateTime
  Employee    Employee      @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  OrderDetail OrderDetail[]
}

model OrderDetail {
  orderId    Int      @id
  productId  Int
  supplierId Int
  quantity   Int
  Order      Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  Product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  Supplier   Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}
